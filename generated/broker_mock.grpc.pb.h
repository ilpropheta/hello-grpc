// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: broker.proto

#include "broker.pb.h"
#include "broker.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>

class MockMessageBrokerStub : public MessageBroker::StubInterface {
 public:
  MOCK_METHOD3(Send, ::grpc::Status(::grpc::ClientContext* context, const ::SendRequest& request, ::SendResponse* response));
  MOCK_METHOD3(AsyncSendRaw, ::grpc::ClientAsyncResponseReaderInterface< ::SendResponse>*(::grpc::ClientContext* context, const ::SendRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncSendRaw, ::grpc::ClientAsyncResponseReaderInterface< ::SendResponse>*(::grpc::ClientContext* context, const ::SendRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD2(ReceiveRaw, ::grpc::ClientReaderInterface< ::ReceiveResponse>*(::grpc::ClientContext* context, const ::ReceiveRequest& request));
  MOCK_METHOD4(AsyncReceiveRaw, ::grpc::ClientAsyncReaderInterface< ::ReceiveResponse>*(::grpc::ClientContext* context, const ::ReceiveRequest& request, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD3(PrepareAsyncReceiveRaw, ::grpc::ClientAsyncReaderInterface< ::ReceiveResponse>*(::grpc::ClientContext* context, const ::ReceiveRequest& request, ::grpc::CompletionQueue* cq));
};

